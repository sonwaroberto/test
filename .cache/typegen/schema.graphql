# Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = ["STRAPI_BW_ASSET_VALUE_TEXTNODE"]
) on OBJECT

# Add date formatting options.
directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

# Do not infer field types from field values.
directive @dontInfer on OBJECT

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer on OBJECT

# Link to node by foreign-key relation.
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".
#
# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

input AVIFOptions {
  lossless: Boolean
  quality: Int
  speed: Int
}

input BlurredOptions {
  # Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this
  toFormat: ImageFormat

  # Width of the generated low-res preview. Default is 20px
  width: Int
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar Date

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

type Directory implements Node {
  absolutePath: String!
  accessTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  atime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  changeTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  children: [Node!]!
  ctime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  nodes: [Directory!]!
  pageInfo: PageInfo!
  sum(field: DirectoryFieldsEnum!): Float
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

type DirectoryGroupConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  nodes: [Directory!]!
  pageInfo: PageInfo!
  sum(field: DirectoryFieldsEnum!): Float
  totalCount: Int!
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

type File implements Node {
  absolutePath: String!
  accessTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  atime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  changeTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!

  # Returns the first child node of type ImageSharp or null if there are no children of given type on this node
  childImageSharp: ImageSharp
  children: [Node!]!

  # Returns all children nodes filtered by type ImageSharp
  childrenImageSharp: [ImageSharp]
  ctime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  nodes: [File!]!
  pageInfo: PageInfo!
  sum(field: FileFieldsEnum!): Float
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  changeTime
  childImageSharp___children
  childImageSharp___children___children
  childImageSharp___children___children___children
  childImageSharp___children___children___id
  childImageSharp___children___id
  childImageSharp___children___internal___content
  childImageSharp___children___internal___contentDigest
  childImageSharp___children___internal___contentFilePath
  childImageSharp___children___internal___description
  childImageSharp___children___internal___fieldOwners
  childImageSharp___children___internal___ignoreType
  childImageSharp___children___internal___mediaType
  childImageSharp___children___internal___owner
  childImageSharp___children___internal___type
  childImageSharp___children___parent___children
  childImageSharp___children___parent___id
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id
  childImageSharp___internal___content
  childImageSharp___internal___contentDigest
  childImageSharp___internal___contentFilePath
  childImageSharp___internal___description
  childImageSharp___internal___fieldOwners
  childImageSharp___internal___ignoreType
  childImageSharp___internal___mediaType
  childImageSharp___internal___owner
  childImageSharp___internal___type
  childImageSharp___original___height
  childImageSharp___original___src
  childImageSharp___original___width
  childImageSharp___parent___children
  childImageSharp___parent___children___children
  childImageSharp___parent___children___id
  childImageSharp___parent___id
  childImageSharp___parent___internal___content
  childImageSharp___parent___internal___contentDigest
  childImageSharp___parent___internal___contentFilePath
  childImageSharp___parent___internal___description
  childImageSharp___parent___internal___fieldOwners
  childImageSharp___parent___internal___ignoreType
  childImageSharp___parent___internal___mediaType
  childImageSharp___parent___internal___owner
  childImageSharp___parent___internal___type
  childImageSharp___parent___parent___children
  childImageSharp___parent___parent___id
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children
  childrenImageSharp
  childrenImageSharp___children
  childrenImageSharp___children___children
  childrenImageSharp___children___children___children
  childrenImageSharp___children___children___id
  childrenImageSharp___children___id
  childrenImageSharp___children___internal___content
  childrenImageSharp___children___internal___contentDigest
  childrenImageSharp___children___internal___contentFilePath
  childrenImageSharp___children___internal___description
  childrenImageSharp___children___internal___fieldOwners
  childrenImageSharp___children___internal___ignoreType
  childrenImageSharp___children___internal___mediaType
  childrenImageSharp___children___internal___owner
  childrenImageSharp___children___internal___type
  childrenImageSharp___children___parent___children
  childrenImageSharp___children___parent___id
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id
  childrenImageSharp___internal___content
  childrenImageSharp___internal___contentDigest
  childrenImageSharp___internal___contentFilePath
  childrenImageSharp___internal___description
  childrenImageSharp___internal___fieldOwners
  childrenImageSharp___internal___ignoreType
  childrenImageSharp___internal___mediaType
  childrenImageSharp___internal___owner
  childrenImageSharp___internal___type
  childrenImageSharp___original___height
  childrenImageSharp___original___src
  childrenImageSharp___original___width
  childrenImageSharp___parent___children
  childrenImageSharp___parent___children___children
  childrenImageSharp___parent___children___id
  childrenImageSharp___parent___id
  childrenImageSharp___parent___internal___content
  childrenImageSharp___parent___internal___contentDigest
  childrenImageSharp___parent___internal___contentFilePath
  childrenImageSharp___parent___internal___description
  childrenImageSharp___parent___internal___fieldOwners
  childrenImageSharp___parent___internal___ignoreType
  childrenImageSharp___parent___internal___mediaType
  childrenImageSharp___parent___internal___owner
  childrenImageSharp___parent___internal___type
  childrenImageSharp___parent___parent___children
  childrenImageSharp___parent___parent___id
  childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  children: NodeFilterListInput
  childrenImageSharp: ImageSharpFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

type FileGroupConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  nodes: [File!]!
  pageInfo: PageInfo!
  sum(field: FileFieldsEnum!): Float
  totalCount: Int!
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

scalar GatsbyImageData

input GatsbyImageDataQueryOperatorInput {
  eq: GatsbyImageData
  in: [GatsbyImageData]
  ne: GatsbyImageData
  nin: [GatsbyImageData]
}

enum GatsbyImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum GatsbyImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum GatsbyImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum ImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0, webpQuality: Int, width: Int): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)"
    base64Width: Int
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    jpegQuality: Int
    maxHeight: Int
    maxWidth: Int
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    traceSVG: Potrace
    trim: Float = 0
    webpQuality: Int
  ): ImageSharpFluid
  gatsbyImageData(
    # If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    # If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    aspectRatio: Float

    # Options to pass to sharp when generating AVIF images.
    avifOptions: AVIFOptions

    # Background color applied to the wrapper. Also passed to sharp to use as a background when "letterboxing" an image to another aspect ratio.
    backgroundColor: String

    # Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    blurredOptions: BlurredOptions

    # Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    # based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    # It will never generate any images larger than the source.
    breakpoints: [Int]

    # The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    # The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    # not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    # both PNG and JPG is not supported and will be ignored.
    formats: [ImageFormat]

    # The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    # The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    # matching the aspect ratio of the source image.
    height: Int

    # Options to pass to sharp when generating JPG images.
    jpgOptions: JPGOptions

    # The layout for the image.
    # FIXED: A static image sized, that does not resize according to the screen width
    # FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    layout: ImageLayout = CONSTRAINED

    # A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    # Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    # and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    outputPixelDensities: [Float]

    # Format of generated placeholder image, displayed while the main image loads.
    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    # TRACED_SVG: a low-resolution traced SVG of the image.
    # NONE: no placeholder. Set "background" to use a fixed background color.
    placeholder: ImagePlaceholder

    # Options to pass to sharp when generating PNG images.
    pngOptions: PNGOptions

    # The default quality. This is overridden by any format-specific options
    quality: Int

    # The "sizes" property, passed to the img tag. This describes the display size of the image.
    # This does not affect the generated images, but is used by the browser to decide which images to download.
    # You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    # does not actually span the full width of the screen, in which case you should pass the correct size here.
    sizes: String

    # Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    tracedSVGOptions: Potrace

    # Options to pass to sharp to control cropping and other image manipulations.
    transformOptions: TransformOptions

    # Options to pass to sharp when generating WebP images.
    webpOptions: WebPOptions

    # The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    # Ignored if layout = FLUID.
    width: Int
  ): GatsbyImageData!
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  sum(field: ImageSharpFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  original___height
  original___src
  original___width
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: GatsbyImageDataQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

type ImageSharpGroupConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  sum(field: ImageSharpFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

type Internal {
  content: String
  contentDigest: String!
  contentFilePath: String
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  contentFilePath: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input JPGOptions {
  progressive: Boolean = true
  quality: Int
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input JSONQueryOperatorInput {
  eq: JSON
  glob: JSON
  in: [JSON]
  ne: JSON
  nin: [JSON]
  regex: JSON
}

enum MarkdownExcerptFormats {
  HTML
  MARKDOWN
  PLAIN
}

type MarkdownHeading {
  depth: Int
  id: String
  value: String
}

input MarkdownHeadingFilterInput {
  depth: IntQueryOperatorInput
  id: StringQueryOperatorInput
  value: StringQueryOperatorInput
}

input MarkdownHeadingFilterListInput {
  elemMatch: MarkdownHeadingFilterInput
}

enum MarkdownHeadingLevels {
  h1
  h2
  h3
  h4
  h5
  h6
}

type MarkdownRemark implements Node {
  children: [Node!]!
  excerpt(format: MarkdownExcerptFormats = PLAIN, pruneLength: Int = 140, truncate: Boolean = false): String
  excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON
  frontmatter: MarkdownRemarkFrontmatter
  headings(depth: MarkdownHeadingLevels): [MarkdownHeading]
  html: String
  htmlAst: JSON
  id: ID!
  internal: Internal!
  parent: Node
  rawMarkdownBody: String
  tableOfContents(absolute: Boolean = false, heading: String, maxDepth: Int, pathToSlugField: String = ""): String
  timeToRead: Int
  wordCount: MarkdownWordCount
}

type MarkdownRemarkConnection {
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  edges: [MarkdownRemarkEdge!]!
  group(field: MarkdownRemarkFieldsEnum!, limit: Int, skip: Int): [MarkdownRemarkGroupConnection!]!
  max(field: MarkdownRemarkFieldsEnum!): Float
  min(field: MarkdownRemarkFieldsEnum!): Float
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  sum(field: MarkdownRemarkFieldsEnum!): Float
  totalCount: Int!
}

type MarkdownRemarkEdge {
  next: MarkdownRemark
  node: MarkdownRemark!
  previous: MarkdownRemark
}

enum MarkdownRemarkFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  frontmatter___title
  headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  html
  htmlAst
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  rawMarkdownBody
  tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  timeToRead
  wordCount___paragraphs
  wordCount___sentences
  wordCount___words
}

input MarkdownRemarkFilterInput {
  children: NodeFilterListInput
  excerpt: StringQueryOperatorInput
  excerptAst: JSONQueryOperatorInput
  frontmatter: MarkdownRemarkFrontmatterFilterInput
  headings: MarkdownHeadingFilterListInput
  html: StringQueryOperatorInput
  htmlAst: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  rawMarkdownBody: StringQueryOperatorInput
  tableOfContents: StringQueryOperatorInput
  timeToRead: IntQueryOperatorInput
  wordCount: MarkdownWordCountFilterInput
}

input MarkdownRemarkFilterListInput {
  elemMatch: MarkdownRemarkFilterInput
}

type MarkdownRemarkFrontmatter {
  title: String
}

input MarkdownRemarkFrontmatterFilterInput {
  title: StringQueryOperatorInput
}

type MarkdownRemarkGroupConnection {
  distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
  edges: [MarkdownRemarkEdge!]!
  field: String!
  fieldValue: String
  group(field: MarkdownRemarkFieldsEnum!, limit: Int, skip: Int): [MarkdownRemarkGroupConnection!]!
  max(field: MarkdownRemarkFieldsEnum!): Float
  min(field: MarkdownRemarkFieldsEnum!): Float
  nodes: [MarkdownRemark!]!
  pageInfo: PageInfo!
  sum(field: MarkdownRemarkFieldsEnum!): Float
  totalCount: Int!
}

input MarkdownRemarkSortInput {
  fields: [MarkdownRemarkFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type MarkdownWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

input MarkdownWordCountFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

# Node Interface
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input PNGOptions {
  compressionSpeed: Int = 4
  quality: Int
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

type Query {
  allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
  allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
  allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
  allMarkdownRemark(filter: MarkdownRemarkFilterInput, limit: Int, skip: Int, sort: MarkdownRemarkSortInput): MarkdownRemarkConnection!
  allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
  allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
  allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
  allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
  allStrapiBwAsset(filter: STRAPI_BW_ASSETFilterInput, limit: Int, skip: Int, sort: STRAPI_BW_ASSETSortInput): STRAPI_BW_ASSETConnection!
  allStrapiBwAssetValueTextnode(filter: STRAPI_BW_ASSET_VALUE_TEXTNODEFilterInput, limit: Int, skip: Int, sort: STRAPI_BW_ASSET_VALUE_TEXTNODESortInput): STRAPI_BW_ASSET_VALUE_TEXTNODEConnection!
  allStrapiBwImage(filter: STRAPI_BW_IMAGEFilterInput, limit: Int, skip: Int, sort: STRAPI_BW_IMAGESortInput): STRAPI_BW_IMAGEConnection!
  allStrapiBwPage(filter: STRAPI_BW_PAGEFilterInput, limit: Int, skip: Int, sort: STRAPI_BW_PAGESortInput): STRAPI_BW_PAGEConnection!
  allStrapiMedia(filter: STRAPI__MEDIAFilterInput, limit: Int, skip: Int, sort: STRAPI__MEDIASortInput): STRAPI__MEDIAConnection!
  directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
  file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
  imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: GatsbyImageDataQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
  markdownRemark(children: NodeFilterListInput, excerpt: StringQueryOperatorInput, excerptAst: JSONQueryOperatorInput, frontmatter: MarkdownRemarkFrontmatterFilterInput, headings: MarkdownHeadingFilterListInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, rawMarkdownBody: StringQueryOperatorInput, tableOfContents: StringQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MarkdownWordCountFilterInput): MarkdownRemark
  site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, graphqlTypegen: SiteGraphqlTypegenFilterInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, jsxRuntime: StringQueryOperatorInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, trailingSlash: StringQueryOperatorInput): Site
  siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
  siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, children: NodeFilterListInput, functionRoute: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, parent: NodeFilterInput, pluginName: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
  sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput): SitePage
  sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: JSONQueryOperatorInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
  strapiBwAsset(bw_page: STRAPI_BW_PAGEFilterInput, childStrapiBwAssetValueTextnode: STRAPI_BW_ASSET_VALUE_TEXTNODEFilterInput, children: NodeFilterListInput, childrenStrapiBwAssetValueTextnode: STRAPI_BW_ASSET_VALUE_TEXTNODEFilterListInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, key: StringQueryOperatorInput, locale: StringQueryOperatorInput, localizations: STRAPI_BW_ASSETLocalizationsFilterInput, parent: NodeFilterInput, publishedAt: DateQueryOperatorInput, strapi_id: IntQueryOperatorInput, updatedAt: DateQueryOperatorInput, value: STRAPI_BW_ASSETValueFilterInput): STRAPI_BW_ASSET
  strapiBwAssetValueTextnode(childMarkdownRemark: MarkdownRemarkFilterInput, children: NodeFilterListInput, childrenMarkdownRemark: MarkdownRemarkFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, value: StringQueryOperatorInput): STRAPI_BW_ASSET_VALUE_TEXTNODE
  strapiBwImage(brand: StringQueryOperatorInput, bw_page: STRAPI_BW_PAGEFilterInput, car_image: STRAPI__MEDIAFilterInput, children: NodeFilterListInput, color: StringQueryOperatorInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, key: StringQueryOperatorInput, locale: StringQueryOperatorInput, localizations: STRAPI_BW_IMAGELocalizationsFilterInput, model: StringQueryOperatorInput, parent: NodeFilterInput, price: IntQueryOperatorInput, publishedAt: DateQueryOperatorInput, strapi_id: IntQueryOperatorInput, updatedAt: DateQueryOperatorInput): STRAPI_BW_IMAGE
  strapiBwPage(bw_assets: STRAPI_BW_ASSETFilterListInput, bw_images: STRAPI_BW_IMAGEFilterListInput, children: NodeFilterListInput, createdAt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, locale: StringQueryOperatorInput, localizations: STRAPI_BW_PAGELocalizationsFilterInput, parent: NodeFilterInput, publishedAt: DateQueryOperatorInput, strapi_id: IntQueryOperatorInput, tite: StringQueryOperatorInput, updatedAt: DateQueryOperatorInput, uri: StringQueryOperatorInput): STRAPI_BW_PAGE
  strapiMedia(alternativeText: StringQueryOperatorInput, caption: StringQueryOperatorInput, children: NodeFilterListInput, createdAt: DateQueryOperatorInput, ext: StringQueryOperatorInput, formats: STRAPI__MEDIAFormatsFilterInput, hash: StringQueryOperatorInput, height: IntQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, mime: StringQueryOperatorInput, name: StringQueryOperatorInput, parent: NodeFilterInput, size: FloatQueryOperatorInput, strapi_id: IntQueryOperatorInput, updatedAt: DateQueryOperatorInput, url: StringQueryOperatorInput, width: IntQueryOperatorInput): STRAPI__MEDIA
}

type STRAPI_BW_ASSET implements Node {
  bw_page: STRAPI_BW_PAGE

  # Returns the first child node of type STRAPI_BW_ASSET_VALUE_TEXTNODE or null if there are no children of given type on this node
  childStrapiBwAssetValueTextnode: STRAPI_BW_ASSET_VALUE_TEXTNODE
  children: [Node!]!

  # Returns all children nodes filtered by type STRAPI_BW_ASSET_VALUE_TEXTNODE
  childrenStrapiBwAssetValueTextnode: [STRAPI_BW_ASSET_VALUE_TEXTNODE]
  createdAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  internal: Internal!
  key: String
  locale: String
  localizations: STRAPI_BW_ASSETLocalizations
  parent: Node
  publishedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  strapi_id: Int
  updatedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  value: STRAPI_BW_ASSETValue
}

type STRAPI_BW_ASSETConnection {
  distinct(field: STRAPI_BW_ASSETFieldsEnum!): [String!]!
  edges: [STRAPI_BW_ASSETEdge!]!
  group(field: STRAPI_BW_ASSETFieldsEnum!, limit: Int, skip: Int): [STRAPI_BW_ASSETGroupConnection!]!
  max(field: STRAPI_BW_ASSETFieldsEnum!): Float
  min(field: STRAPI_BW_ASSETFieldsEnum!): Float
  nodes: [STRAPI_BW_ASSET!]!
  pageInfo: PageInfo!
  sum(field: STRAPI_BW_ASSETFieldsEnum!): Float
  totalCount: Int!
}

type STRAPI_BW_ASSETEdge {
  next: STRAPI_BW_ASSET
  node: STRAPI_BW_ASSET!
  previous: STRAPI_BW_ASSET
}

enum STRAPI_BW_ASSETFieldsEnum {
  bw_page___bw_assets
  bw_page___bw_assets___bw_page___bw_assets
  bw_page___bw_assets___bw_page___bw_images
  bw_page___bw_assets___bw_page___children
  bw_page___bw_assets___bw_page___createdAt
  bw_page___bw_assets___bw_page___id
  bw_page___bw_assets___bw_page___locale
  bw_page___bw_assets___bw_page___publishedAt
  bw_page___bw_assets___bw_page___strapi_id
  bw_page___bw_assets___bw_page___tite
  bw_page___bw_assets___bw_page___updatedAt
  bw_page___bw_assets___bw_page___uri
  bw_page___bw_assets___childStrapiBwAssetValueTextnode___children
  bw_page___bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark
  bw_page___bw_assets___childStrapiBwAssetValueTextnode___id
  bw_page___bw_assets___childStrapiBwAssetValueTextnode___value
  bw_page___bw_assets___children
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode___children
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode___id
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode___value
  bw_page___bw_assets___children___children
  bw_page___bw_assets___children___id
  bw_page___bw_assets___createdAt
  bw_page___bw_assets___id
  bw_page___bw_assets___internal___content
  bw_page___bw_assets___internal___contentDigest
  bw_page___bw_assets___internal___contentFilePath
  bw_page___bw_assets___internal___description
  bw_page___bw_assets___internal___fieldOwners
  bw_page___bw_assets___internal___ignoreType
  bw_page___bw_assets___internal___mediaType
  bw_page___bw_assets___internal___owner
  bw_page___bw_assets___internal___type
  bw_page___bw_assets___key
  bw_page___bw_assets___locale
  bw_page___bw_assets___localizations___data
  bw_page___bw_assets___parent___children
  bw_page___bw_assets___parent___id
  bw_page___bw_assets___publishedAt
  bw_page___bw_assets___strapi_id
  bw_page___bw_assets___updatedAt
  bw_page___bw_images
  bw_page___bw_images___brand
  bw_page___bw_images___bw_page___bw_assets
  bw_page___bw_images___bw_page___bw_images
  bw_page___bw_images___bw_page___children
  bw_page___bw_images___bw_page___createdAt
  bw_page___bw_images___bw_page___id
  bw_page___bw_images___bw_page___locale
  bw_page___bw_images___bw_page___publishedAt
  bw_page___bw_images___bw_page___strapi_id
  bw_page___bw_images___bw_page___tite
  bw_page___bw_images___bw_page___updatedAt
  bw_page___bw_images___bw_page___uri
  bw_page___bw_images___car_image___alternativeText
  bw_page___bw_images___car_image___caption
  bw_page___bw_images___car_image___children
  bw_page___bw_images___car_image___createdAt
  bw_page___bw_images___car_image___ext
  bw_page___bw_images___car_image___hash
  bw_page___bw_images___car_image___height
  bw_page___bw_images___car_image___id
  bw_page___bw_images___car_image___mime
  bw_page___bw_images___car_image___name
  bw_page___bw_images___car_image___size
  bw_page___bw_images___car_image___strapi_id
  bw_page___bw_images___car_image___updatedAt
  bw_page___bw_images___car_image___url
  bw_page___bw_images___car_image___width
  bw_page___bw_images___children
  bw_page___bw_images___children___children
  bw_page___bw_images___children___id
  bw_page___bw_images___color
  bw_page___bw_images___createdAt
  bw_page___bw_images___id
  bw_page___bw_images___internal___content
  bw_page___bw_images___internal___contentDigest
  bw_page___bw_images___internal___contentFilePath
  bw_page___bw_images___internal___description
  bw_page___bw_images___internal___fieldOwners
  bw_page___bw_images___internal___ignoreType
  bw_page___bw_images___internal___mediaType
  bw_page___bw_images___internal___owner
  bw_page___bw_images___internal___type
  bw_page___bw_images___key
  bw_page___bw_images___locale
  bw_page___bw_images___localizations___data
  bw_page___bw_images___model
  bw_page___bw_images___parent___children
  bw_page___bw_images___parent___id
  bw_page___bw_images___price
  bw_page___bw_images___publishedAt
  bw_page___bw_images___strapi_id
  bw_page___bw_images___updatedAt
  bw_page___children
  bw_page___children___children
  bw_page___children___children___children
  bw_page___children___children___id
  bw_page___children___id
  bw_page___children___internal___content
  bw_page___children___internal___contentDigest
  bw_page___children___internal___contentFilePath
  bw_page___children___internal___description
  bw_page___children___internal___fieldOwners
  bw_page___children___internal___ignoreType
  bw_page___children___internal___mediaType
  bw_page___children___internal___owner
  bw_page___children___internal___type
  bw_page___children___parent___children
  bw_page___children___parent___id
  bw_page___createdAt
  bw_page___id
  bw_page___internal___content
  bw_page___internal___contentDigest
  bw_page___internal___contentFilePath
  bw_page___internal___description
  bw_page___internal___fieldOwners
  bw_page___internal___ignoreType
  bw_page___internal___mediaType
  bw_page___internal___owner
  bw_page___internal___type
  bw_page___locale
  bw_page___localizations___data
  bw_page___localizations___data___id
  bw_page___parent___children
  bw_page___parent___children___children
  bw_page___parent___children___id
  bw_page___parent___id
  bw_page___parent___internal___content
  bw_page___parent___internal___contentDigest
  bw_page___parent___internal___contentFilePath
  bw_page___parent___internal___description
  bw_page___parent___internal___fieldOwners
  bw_page___parent___internal___ignoreType
  bw_page___parent___internal___mediaType
  bw_page___parent___internal___owner
  bw_page___parent___internal___type
  bw_page___parent___parent___children
  bw_page___parent___parent___id
  bw_page___publishedAt
  bw_page___strapi_id
  bw_page___tite
  bw_page___updatedAt
  bw_page___uri
  childStrapiBwAssetValueTextnode___childMarkdownRemark___children
  childStrapiBwAssetValueTextnode___childMarkdownRemark___children___children
  childStrapiBwAssetValueTextnode___childMarkdownRemark___children___id
  childStrapiBwAssetValueTextnode___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childMarkdownRemark___frontmatter___title
  childStrapiBwAssetValueTextnode___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childMarkdownRemark___html
  childStrapiBwAssetValueTextnode___childMarkdownRemark___htmlAst
  childStrapiBwAssetValueTextnode___childMarkdownRemark___id
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___content
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___contentDigest
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___contentFilePath
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___description
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___fieldOwners
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___ignoreType
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___mediaType
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___owner
  childStrapiBwAssetValueTextnode___childMarkdownRemark___internal___type
  childStrapiBwAssetValueTextnode___childMarkdownRemark___parent___children
  childStrapiBwAssetValueTextnode___childMarkdownRemark___parent___id
  childStrapiBwAssetValueTextnode___childMarkdownRemark___rawMarkdownBody
  childStrapiBwAssetValueTextnode___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childMarkdownRemark___timeToRead
  childStrapiBwAssetValueTextnode___childMarkdownRemark___wordCount___paragraphs
  childStrapiBwAssetValueTextnode___childMarkdownRemark___wordCount___sentences
  childStrapiBwAssetValueTextnode___childMarkdownRemark___wordCount___words
  childStrapiBwAssetValueTextnode___children
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___children
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___children___children
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___children___id
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___frontmatter___title
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___html
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___htmlAst
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___id
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___content
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___contentDigest
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___contentFilePath
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___description
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___fieldOwners
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___ignoreType
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___mediaType
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___owner
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___type
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___parent___children
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___parent___id
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___rawMarkdownBody
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___timeToRead
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___wordCount___paragraphs
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___wordCount___sentences
  childStrapiBwAssetValueTextnode___childrenMarkdownRemark___wordCount___words
  childStrapiBwAssetValueTextnode___children___children
  childStrapiBwAssetValueTextnode___children___children___children
  childStrapiBwAssetValueTextnode___children___children___id
  childStrapiBwAssetValueTextnode___children___id
  childStrapiBwAssetValueTextnode___children___internal___content
  childStrapiBwAssetValueTextnode___children___internal___contentDigest
  childStrapiBwAssetValueTextnode___children___internal___contentFilePath
  childStrapiBwAssetValueTextnode___children___internal___description
  childStrapiBwAssetValueTextnode___children___internal___fieldOwners
  childStrapiBwAssetValueTextnode___children___internal___ignoreType
  childStrapiBwAssetValueTextnode___children___internal___mediaType
  childStrapiBwAssetValueTextnode___children___internal___owner
  childStrapiBwAssetValueTextnode___children___internal___type
  childStrapiBwAssetValueTextnode___children___parent___children
  childStrapiBwAssetValueTextnode___children___parent___id
  childStrapiBwAssetValueTextnode___id
  childStrapiBwAssetValueTextnode___internal___content
  childStrapiBwAssetValueTextnode___internal___contentDigest
  childStrapiBwAssetValueTextnode___internal___contentFilePath
  childStrapiBwAssetValueTextnode___internal___description
  childStrapiBwAssetValueTextnode___internal___fieldOwners
  childStrapiBwAssetValueTextnode___internal___ignoreType
  childStrapiBwAssetValueTextnode___internal___mediaType
  childStrapiBwAssetValueTextnode___internal___owner
  childStrapiBwAssetValueTextnode___internal___type
  childStrapiBwAssetValueTextnode___parent___children
  childStrapiBwAssetValueTextnode___parent___children___children
  childStrapiBwAssetValueTextnode___parent___children___id
  childStrapiBwAssetValueTextnode___parent___id
  childStrapiBwAssetValueTextnode___parent___internal___content
  childStrapiBwAssetValueTextnode___parent___internal___contentDigest
  childStrapiBwAssetValueTextnode___parent___internal___contentFilePath
  childStrapiBwAssetValueTextnode___parent___internal___description
  childStrapiBwAssetValueTextnode___parent___internal___fieldOwners
  childStrapiBwAssetValueTextnode___parent___internal___ignoreType
  childStrapiBwAssetValueTextnode___parent___internal___mediaType
  childStrapiBwAssetValueTextnode___parent___internal___owner
  childStrapiBwAssetValueTextnode___parent___internal___type
  childStrapiBwAssetValueTextnode___parent___parent___children
  childStrapiBwAssetValueTextnode___parent___parent___id
  childStrapiBwAssetValueTextnode___value
  children
  childrenStrapiBwAssetValueTextnode
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___children
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___children___children
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___children___id
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___frontmatter___title
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___html
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___htmlAst
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___id
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___content
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___contentDigest
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___contentFilePath
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___description
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___fieldOwners
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___ignoreType
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___mediaType
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___owner
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___internal___type
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___parent___children
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___parent___id
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___rawMarkdownBody
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___timeToRead
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___wordCount___paragraphs
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___wordCount___sentences
  childrenStrapiBwAssetValueTextnode___childMarkdownRemark___wordCount___words
  childrenStrapiBwAssetValueTextnode___children
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___children
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___children___children
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___children___id
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___frontmatter___title
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___html
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___htmlAst
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___id
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___content
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___contentDigest
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___contentFilePath
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___description
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___fieldOwners
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___ignoreType
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___mediaType
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___owner
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___internal___type
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___parent___children
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___parent___id
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___rawMarkdownBody
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___timeToRead
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___wordCount___paragraphs
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___wordCount___sentences
  childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___wordCount___words
  childrenStrapiBwAssetValueTextnode___children___children
  childrenStrapiBwAssetValueTextnode___children___children___children
  childrenStrapiBwAssetValueTextnode___children___children___id
  childrenStrapiBwAssetValueTextnode___children___id
  childrenStrapiBwAssetValueTextnode___children___internal___content
  childrenStrapiBwAssetValueTextnode___children___internal___contentDigest
  childrenStrapiBwAssetValueTextnode___children___internal___contentFilePath
  childrenStrapiBwAssetValueTextnode___children___internal___description
  childrenStrapiBwAssetValueTextnode___children___internal___fieldOwners
  childrenStrapiBwAssetValueTextnode___children___internal___ignoreType
  childrenStrapiBwAssetValueTextnode___children___internal___mediaType
  childrenStrapiBwAssetValueTextnode___children___internal___owner
  childrenStrapiBwAssetValueTextnode___children___internal___type
  childrenStrapiBwAssetValueTextnode___children___parent___children
  childrenStrapiBwAssetValueTextnode___children___parent___id
  childrenStrapiBwAssetValueTextnode___id
  childrenStrapiBwAssetValueTextnode___internal___content
  childrenStrapiBwAssetValueTextnode___internal___contentDigest
  childrenStrapiBwAssetValueTextnode___internal___contentFilePath
  childrenStrapiBwAssetValueTextnode___internal___description
  childrenStrapiBwAssetValueTextnode___internal___fieldOwners
  childrenStrapiBwAssetValueTextnode___internal___ignoreType
  childrenStrapiBwAssetValueTextnode___internal___mediaType
  childrenStrapiBwAssetValueTextnode___internal___owner
  childrenStrapiBwAssetValueTextnode___internal___type
  childrenStrapiBwAssetValueTextnode___parent___children
  childrenStrapiBwAssetValueTextnode___parent___children___children
  childrenStrapiBwAssetValueTextnode___parent___children___id
  childrenStrapiBwAssetValueTextnode___parent___id
  childrenStrapiBwAssetValueTextnode___parent___internal___content
  childrenStrapiBwAssetValueTextnode___parent___internal___contentDigest
  childrenStrapiBwAssetValueTextnode___parent___internal___contentFilePath
  childrenStrapiBwAssetValueTextnode___parent___internal___description
  childrenStrapiBwAssetValueTextnode___parent___internal___fieldOwners
  childrenStrapiBwAssetValueTextnode___parent___internal___ignoreType
  childrenStrapiBwAssetValueTextnode___parent___internal___mediaType
  childrenStrapiBwAssetValueTextnode___parent___internal___owner
  childrenStrapiBwAssetValueTextnode___parent___internal___type
  childrenStrapiBwAssetValueTextnode___parent___parent___children
  childrenStrapiBwAssetValueTextnode___parent___parent___id
  childrenStrapiBwAssetValueTextnode___value
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  createdAt
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  key
  locale
  localizations___data
  localizations___data___attributes___createdAt
  localizations___data___attributes___key
  localizations___data___attributes___locale
  localizations___data___attributes___publishedAt
  localizations___data___attributes___updatedAt
  localizations___data___attributes___value
  localizations___data___id
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  publishedAt
  strapi_id
  updatedAt
  value___data___childMarkdownRemark___children
  value___data___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  value___data___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  value___data___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  value___data___childMarkdownRemark___html
  value___data___childMarkdownRemark___htmlAst
  value___data___childMarkdownRemark___id
  value___data___childMarkdownRemark___rawMarkdownBody
  value___data___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  value___data___childMarkdownRemark___timeToRead
  value___data___children
  value___data___childrenMarkdownRemark
  value___data___childrenMarkdownRemark___children
  value___data___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  value___data___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  value___data___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  value___data___childrenMarkdownRemark___html
  value___data___childrenMarkdownRemark___htmlAst
  value___data___childrenMarkdownRemark___id
  value___data___childrenMarkdownRemark___rawMarkdownBody
  value___data___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  value___data___childrenMarkdownRemark___timeToRead
  value___data___children___children
  value___data___children___id
  value___data___id
  value___data___internal___content
  value___data___internal___contentDigest
  value___data___internal___contentFilePath
  value___data___internal___description
  value___data___internal___fieldOwners
  value___data___internal___ignoreType
  value___data___internal___mediaType
  value___data___internal___owner
  value___data___internal___type
  value___data___parent___children
  value___data___parent___id
  value___data___value
}

input STRAPI_BW_ASSETFilterInput {
  bw_page: STRAPI_BW_PAGEFilterInput
  childStrapiBwAssetValueTextnode: STRAPI_BW_ASSET_VALUE_TEXTNODEFilterInput
  children: NodeFilterListInput
  childrenStrapiBwAssetValueTextnode: STRAPI_BW_ASSET_VALUE_TEXTNODEFilterListInput
  createdAt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  key: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  localizations: STRAPI_BW_ASSETLocalizationsFilterInput
  parent: NodeFilterInput
  publishedAt: DateQueryOperatorInput
  strapi_id: IntQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  value: STRAPI_BW_ASSETValueFilterInput
}

input STRAPI_BW_ASSETFilterListInput {
  elemMatch: STRAPI_BW_ASSETFilterInput
}

type STRAPI_BW_ASSETGroupConnection {
  distinct(field: STRAPI_BW_ASSETFieldsEnum!): [String!]!
  edges: [STRAPI_BW_ASSETEdge!]!
  field: String!
  fieldValue: String
  group(field: STRAPI_BW_ASSETFieldsEnum!, limit: Int, skip: Int): [STRAPI_BW_ASSETGroupConnection!]!
  max(field: STRAPI_BW_ASSETFieldsEnum!): Float
  min(field: STRAPI_BW_ASSETFieldsEnum!): Float
  nodes: [STRAPI_BW_ASSET!]!
  pageInfo: PageInfo!
  sum(field: STRAPI_BW_ASSETFieldsEnum!): Float
  totalCount: Int!
}

type STRAPI_BW_ASSETLocalizations {
  data: [STRAPI_BW_ASSETLocalizationsData]
}

type STRAPI_BW_ASSETLocalizationsData {
  attributes: STRAPI_BW_ASSETLocalizationsDataAttributes
  id: Int
}

type STRAPI_BW_ASSETLocalizationsDataAttributes {
  createdAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  key: String
  locale: String
  publishedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  updatedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  value: String
}

input STRAPI_BW_ASSETLocalizationsDataAttributesFilterInput {
  createdAt: DateQueryOperatorInput
  key: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  publishedAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  value: StringQueryOperatorInput
}

input STRAPI_BW_ASSETLocalizationsDataFilterInput {
  attributes: STRAPI_BW_ASSETLocalizationsDataAttributesFilterInput
  id: IntQueryOperatorInput
}

input STRAPI_BW_ASSETLocalizationsDataFilterListInput {
  elemMatch: STRAPI_BW_ASSETLocalizationsDataFilterInput
}

input STRAPI_BW_ASSETLocalizationsFilterInput {
  data: STRAPI_BW_ASSETLocalizationsDataFilterListInput
}

input STRAPI_BW_ASSETSortInput {
  fields: [STRAPI_BW_ASSETFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI_BW_ASSETValue {
  data: STRAPI_BW_ASSET_VALUE_TEXTNODE
}

input STRAPI_BW_ASSETValueFilterInput {
  data: STRAPI_BW_ASSET_VALUE_TEXTNODEFilterInput
}

type STRAPI_BW_ASSET_VALUE_TEXTNODE implements Node {
  # Returns the first child node of type MarkdownRemark or null if there are no children of given type on this node
  childMarkdownRemark: MarkdownRemark
  children: [Node!]!

  # Returns all children nodes filtered by type MarkdownRemark
  childrenMarkdownRemark: [MarkdownRemark]
  id: ID!
  internal: Internal!
  parent: Node
  value: String
}

type STRAPI_BW_ASSET_VALUE_TEXTNODEConnection {
  distinct(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!): [String!]!
  edges: [STRAPI_BW_ASSET_VALUE_TEXTNODEEdge!]!
  group(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!, limit: Int, skip: Int): [STRAPI_BW_ASSET_VALUE_TEXTNODEGroupConnection!]!
  max(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!): Float
  min(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!): Float
  nodes: [STRAPI_BW_ASSET_VALUE_TEXTNODE!]!
  pageInfo: PageInfo!
  sum(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!): Float
  totalCount: Int!
}

type STRAPI_BW_ASSET_VALUE_TEXTNODEEdge {
  next: STRAPI_BW_ASSET_VALUE_TEXTNODE
  node: STRAPI_BW_ASSET_VALUE_TEXTNODE!
  previous: STRAPI_BW_ASSET_VALUE_TEXTNODE
}

enum STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum {
  childMarkdownRemark___children
  childMarkdownRemark___children___children
  childMarkdownRemark___children___children___children
  childMarkdownRemark___children___children___id
  childMarkdownRemark___children___id
  childMarkdownRemark___children___internal___content
  childMarkdownRemark___children___internal___contentDigest
  childMarkdownRemark___children___internal___contentFilePath
  childMarkdownRemark___children___internal___description
  childMarkdownRemark___children___internal___fieldOwners
  childMarkdownRemark___children___internal___ignoreType
  childMarkdownRemark___children___internal___mediaType
  childMarkdownRemark___children___internal___owner
  childMarkdownRemark___children___internal___type
  childMarkdownRemark___children___parent___children
  childMarkdownRemark___children___parent___id
  childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___frontmatter___title
  childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___html
  childMarkdownRemark___htmlAst
  childMarkdownRemark___id
  childMarkdownRemark___internal___content
  childMarkdownRemark___internal___contentDigest
  childMarkdownRemark___internal___contentFilePath
  childMarkdownRemark___internal___description
  childMarkdownRemark___internal___fieldOwners
  childMarkdownRemark___internal___ignoreType
  childMarkdownRemark___internal___mediaType
  childMarkdownRemark___internal___owner
  childMarkdownRemark___internal___type
  childMarkdownRemark___parent___children
  childMarkdownRemark___parent___children___children
  childMarkdownRemark___parent___children___id
  childMarkdownRemark___parent___id
  childMarkdownRemark___parent___internal___content
  childMarkdownRemark___parent___internal___contentDigest
  childMarkdownRemark___parent___internal___contentFilePath
  childMarkdownRemark___parent___internal___description
  childMarkdownRemark___parent___internal___fieldOwners
  childMarkdownRemark___parent___internal___ignoreType
  childMarkdownRemark___parent___internal___mediaType
  childMarkdownRemark___parent___internal___owner
  childMarkdownRemark___parent___internal___type
  childMarkdownRemark___parent___parent___children
  childMarkdownRemark___parent___parent___id
  childMarkdownRemark___rawMarkdownBody
  childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childMarkdownRemark___timeToRead
  childMarkdownRemark___wordCount___paragraphs
  childMarkdownRemark___wordCount___sentences
  childMarkdownRemark___wordCount___words
  children
  childrenMarkdownRemark
  childrenMarkdownRemark___children
  childrenMarkdownRemark___children___children
  childrenMarkdownRemark___children___children___children
  childrenMarkdownRemark___children___children___id
  childrenMarkdownRemark___children___id
  childrenMarkdownRemark___children___internal___content
  childrenMarkdownRemark___children___internal___contentDigest
  childrenMarkdownRemark___children___internal___contentFilePath
  childrenMarkdownRemark___children___internal___description
  childrenMarkdownRemark___children___internal___fieldOwners
  childrenMarkdownRemark___children___internal___ignoreType
  childrenMarkdownRemark___children___internal___mediaType
  childrenMarkdownRemark___children___internal___owner
  childrenMarkdownRemark___children___internal___type
  childrenMarkdownRemark___children___parent___children
  childrenMarkdownRemark___children___parent___id
  childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___frontmatter___title
  childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___html
  childrenMarkdownRemark___htmlAst
  childrenMarkdownRemark___id
  childrenMarkdownRemark___internal___content
  childrenMarkdownRemark___internal___contentDigest
  childrenMarkdownRemark___internal___contentFilePath
  childrenMarkdownRemark___internal___description
  childrenMarkdownRemark___internal___fieldOwners
  childrenMarkdownRemark___internal___ignoreType
  childrenMarkdownRemark___internal___mediaType
  childrenMarkdownRemark___internal___owner
  childrenMarkdownRemark___internal___type
  childrenMarkdownRemark___parent___children
  childrenMarkdownRemark___parent___children___children
  childrenMarkdownRemark___parent___children___id
  childrenMarkdownRemark___parent___id
  childrenMarkdownRemark___parent___internal___content
  childrenMarkdownRemark___parent___internal___contentDigest
  childrenMarkdownRemark___parent___internal___contentFilePath
  childrenMarkdownRemark___parent___internal___description
  childrenMarkdownRemark___parent___internal___fieldOwners
  childrenMarkdownRemark___parent___internal___ignoreType
  childrenMarkdownRemark___parent___internal___mediaType
  childrenMarkdownRemark___parent___internal___owner
  childrenMarkdownRemark___parent___internal___type
  childrenMarkdownRemark___parent___parent___children
  childrenMarkdownRemark___parent___parent___id
  childrenMarkdownRemark___rawMarkdownBody
  childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenMarkdownRemark___timeToRead
  childrenMarkdownRemark___wordCount___paragraphs
  childrenMarkdownRemark___wordCount___sentences
  childrenMarkdownRemark___wordCount___words
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  value
}

input STRAPI_BW_ASSET_VALUE_TEXTNODEFilterInput {
  childMarkdownRemark: MarkdownRemarkFilterInput
  children: NodeFilterListInput
  childrenMarkdownRemark: MarkdownRemarkFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  value: StringQueryOperatorInput
}

input STRAPI_BW_ASSET_VALUE_TEXTNODEFilterListInput {
  elemMatch: STRAPI_BW_ASSET_VALUE_TEXTNODEFilterInput
}

type STRAPI_BW_ASSET_VALUE_TEXTNODEGroupConnection {
  distinct(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!): [String!]!
  edges: [STRAPI_BW_ASSET_VALUE_TEXTNODEEdge!]!
  field: String!
  fieldValue: String
  group(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!, limit: Int, skip: Int): [STRAPI_BW_ASSET_VALUE_TEXTNODEGroupConnection!]!
  max(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!): Float
  min(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!): Float
  nodes: [STRAPI_BW_ASSET_VALUE_TEXTNODE!]!
  pageInfo: PageInfo!
  sum(field: STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum!): Float
  totalCount: Int!
}

input STRAPI_BW_ASSET_VALUE_TEXTNODESortInput {
  fields: [STRAPI_BW_ASSET_VALUE_TEXTNODEFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI_BW_IMAGE implements Node {
  brand: String
  bw_page: STRAPI_BW_PAGE
  car_image: STRAPI__MEDIA
  children: [Node!]!
  color: String
  createdAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  internal: Internal!
  key: String
  locale: String
  localizations: STRAPI_BW_IMAGELocalizations
  model: String
  parent: Node
  price: Int
  publishedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  strapi_id: Int
  updatedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type STRAPI_BW_IMAGEConnection {
  distinct(field: STRAPI_BW_IMAGEFieldsEnum!): [String!]!
  edges: [STRAPI_BW_IMAGEEdge!]!
  group(field: STRAPI_BW_IMAGEFieldsEnum!, limit: Int, skip: Int): [STRAPI_BW_IMAGEGroupConnection!]!
  max(field: STRAPI_BW_IMAGEFieldsEnum!): Float
  min(field: STRAPI_BW_IMAGEFieldsEnum!): Float
  nodes: [STRAPI_BW_IMAGE!]!
  pageInfo: PageInfo!
  sum(field: STRAPI_BW_IMAGEFieldsEnum!): Float
  totalCount: Int!
}

type STRAPI_BW_IMAGEEdge {
  next: STRAPI_BW_IMAGE
  node: STRAPI_BW_IMAGE!
  previous: STRAPI_BW_IMAGE
}

enum STRAPI_BW_IMAGEFieldsEnum {
  brand
  bw_page___bw_assets
  bw_page___bw_assets___bw_page___bw_assets
  bw_page___bw_assets___bw_page___bw_images
  bw_page___bw_assets___bw_page___children
  bw_page___bw_assets___bw_page___createdAt
  bw_page___bw_assets___bw_page___id
  bw_page___bw_assets___bw_page___locale
  bw_page___bw_assets___bw_page___publishedAt
  bw_page___bw_assets___bw_page___strapi_id
  bw_page___bw_assets___bw_page___tite
  bw_page___bw_assets___bw_page___updatedAt
  bw_page___bw_assets___bw_page___uri
  bw_page___bw_assets___childStrapiBwAssetValueTextnode___children
  bw_page___bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark
  bw_page___bw_assets___childStrapiBwAssetValueTextnode___id
  bw_page___bw_assets___childStrapiBwAssetValueTextnode___value
  bw_page___bw_assets___children
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode___children
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode___id
  bw_page___bw_assets___childrenStrapiBwAssetValueTextnode___value
  bw_page___bw_assets___children___children
  bw_page___bw_assets___children___id
  bw_page___bw_assets___createdAt
  bw_page___bw_assets___id
  bw_page___bw_assets___internal___content
  bw_page___bw_assets___internal___contentDigest
  bw_page___bw_assets___internal___contentFilePath
  bw_page___bw_assets___internal___description
  bw_page___bw_assets___internal___fieldOwners
  bw_page___bw_assets___internal___ignoreType
  bw_page___bw_assets___internal___mediaType
  bw_page___bw_assets___internal___owner
  bw_page___bw_assets___internal___type
  bw_page___bw_assets___key
  bw_page___bw_assets___locale
  bw_page___bw_assets___localizations___data
  bw_page___bw_assets___parent___children
  bw_page___bw_assets___parent___id
  bw_page___bw_assets___publishedAt
  bw_page___bw_assets___strapi_id
  bw_page___bw_assets___updatedAt
  bw_page___bw_images
  bw_page___bw_images___brand
  bw_page___bw_images___bw_page___bw_assets
  bw_page___bw_images___bw_page___bw_images
  bw_page___bw_images___bw_page___children
  bw_page___bw_images___bw_page___createdAt
  bw_page___bw_images___bw_page___id
  bw_page___bw_images___bw_page___locale
  bw_page___bw_images___bw_page___publishedAt
  bw_page___bw_images___bw_page___strapi_id
  bw_page___bw_images___bw_page___tite
  bw_page___bw_images___bw_page___updatedAt
  bw_page___bw_images___bw_page___uri
  bw_page___bw_images___car_image___alternativeText
  bw_page___bw_images___car_image___caption
  bw_page___bw_images___car_image___children
  bw_page___bw_images___car_image___createdAt
  bw_page___bw_images___car_image___ext
  bw_page___bw_images___car_image___hash
  bw_page___bw_images___car_image___height
  bw_page___bw_images___car_image___id
  bw_page___bw_images___car_image___mime
  bw_page___bw_images___car_image___name
  bw_page___bw_images___car_image___size
  bw_page___bw_images___car_image___strapi_id
  bw_page___bw_images___car_image___updatedAt
  bw_page___bw_images___car_image___url
  bw_page___bw_images___car_image___width
  bw_page___bw_images___children
  bw_page___bw_images___children___children
  bw_page___bw_images___children___id
  bw_page___bw_images___color
  bw_page___bw_images___createdAt
  bw_page___bw_images___id
  bw_page___bw_images___internal___content
  bw_page___bw_images___internal___contentDigest
  bw_page___bw_images___internal___contentFilePath
  bw_page___bw_images___internal___description
  bw_page___bw_images___internal___fieldOwners
  bw_page___bw_images___internal___ignoreType
  bw_page___bw_images___internal___mediaType
  bw_page___bw_images___internal___owner
  bw_page___bw_images___internal___type
  bw_page___bw_images___key
  bw_page___bw_images___locale
  bw_page___bw_images___localizations___data
  bw_page___bw_images___model
  bw_page___bw_images___parent___children
  bw_page___bw_images___parent___id
  bw_page___bw_images___price
  bw_page___bw_images___publishedAt
  bw_page___bw_images___strapi_id
  bw_page___bw_images___updatedAt
  bw_page___children
  bw_page___children___children
  bw_page___children___children___children
  bw_page___children___children___id
  bw_page___children___id
  bw_page___children___internal___content
  bw_page___children___internal___contentDigest
  bw_page___children___internal___contentFilePath
  bw_page___children___internal___description
  bw_page___children___internal___fieldOwners
  bw_page___children___internal___ignoreType
  bw_page___children___internal___mediaType
  bw_page___children___internal___owner
  bw_page___children___internal___type
  bw_page___children___parent___children
  bw_page___children___parent___id
  bw_page___createdAt
  bw_page___id
  bw_page___internal___content
  bw_page___internal___contentDigest
  bw_page___internal___contentFilePath
  bw_page___internal___description
  bw_page___internal___fieldOwners
  bw_page___internal___ignoreType
  bw_page___internal___mediaType
  bw_page___internal___owner
  bw_page___internal___type
  bw_page___locale
  bw_page___localizations___data
  bw_page___localizations___data___id
  bw_page___parent___children
  bw_page___parent___children___children
  bw_page___parent___children___id
  bw_page___parent___id
  bw_page___parent___internal___content
  bw_page___parent___internal___contentDigest
  bw_page___parent___internal___contentFilePath
  bw_page___parent___internal___description
  bw_page___parent___internal___fieldOwners
  bw_page___parent___internal___ignoreType
  bw_page___parent___internal___mediaType
  bw_page___parent___internal___owner
  bw_page___parent___internal___type
  bw_page___parent___parent___children
  bw_page___parent___parent___id
  bw_page___publishedAt
  bw_page___strapi_id
  bw_page___tite
  bw_page___updatedAt
  bw_page___uri
  car_image___alternativeText
  car_image___caption
  car_image___children
  car_image___children___children
  car_image___children___children___children
  car_image___children___children___id
  car_image___children___id
  car_image___children___internal___content
  car_image___children___internal___contentDigest
  car_image___children___internal___contentFilePath
  car_image___children___internal___description
  car_image___children___internal___fieldOwners
  car_image___children___internal___ignoreType
  car_image___children___internal___mediaType
  car_image___children___internal___owner
  car_image___children___internal___type
  car_image___children___parent___children
  car_image___children___parent___id
  car_image___createdAt
  car_image___ext
  car_image___formats___large___ext
  car_image___formats___large___hash
  car_image___formats___large___height
  car_image___formats___large___mime
  car_image___formats___large___name
  car_image___formats___large___size
  car_image___formats___large___url
  car_image___formats___large___width
  car_image___formats___medium___ext
  car_image___formats___medium___hash
  car_image___formats___medium___height
  car_image___formats___medium___mime
  car_image___formats___medium___name
  car_image___formats___medium___size
  car_image___formats___medium___url
  car_image___formats___medium___width
  car_image___formats___small___ext
  car_image___formats___small___hash
  car_image___formats___small___height
  car_image___formats___small___mime
  car_image___formats___small___name
  car_image___formats___small___size
  car_image___formats___small___url
  car_image___formats___small___width
  car_image___formats___thumbnail___ext
  car_image___formats___thumbnail___hash
  car_image___formats___thumbnail___height
  car_image___formats___thumbnail___mime
  car_image___formats___thumbnail___name
  car_image___formats___thumbnail___size
  car_image___formats___thumbnail___url
  car_image___formats___thumbnail___width
  car_image___hash
  car_image___height
  car_image___id
  car_image___internal___content
  car_image___internal___contentDigest
  car_image___internal___contentFilePath
  car_image___internal___description
  car_image___internal___fieldOwners
  car_image___internal___ignoreType
  car_image___internal___mediaType
  car_image___internal___owner
  car_image___internal___type
  car_image___mime
  car_image___name
  car_image___parent___children
  car_image___parent___children___children
  car_image___parent___children___id
  car_image___parent___id
  car_image___parent___internal___content
  car_image___parent___internal___contentDigest
  car_image___parent___internal___contentFilePath
  car_image___parent___internal___description
  car_image___parent___internal___fieldOwners
  car_image___parent___internal___ignoreType
  car_image___parent___internal___mediaType
  car_image___parent___internal___owner
  car_image___parent___internal___type
  car_image___parent___parent___children
  car_image___parent___parent___id
  car_image___size
  car_image___strapi_id
  car_image___updatedAt
  car_image___url
  car_image___width
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  color
  createdAt
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  key
  locale
  localizations___data
  localizations___data___attributes___brand
  localizations___data___attributes___color
  localizations___data___attributes___createdAt
  localizations___data___attributes___key
  localizations___data___attributes___locale
  localizations___data___attributes___model
  localizations___data___attributes___price
  localizations___data___attributes___publishedAt
  localizations___data___attributes___updatedAt
  localizations___data___id
  model
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  price
  publishedAt
  strapi_id
  updatedAt
}

input STRAPI_BW_IMAGEFilterInput {
  brand: StringQueryOperatorInput
  bw_page: STRAPI_BW_PAGEFilterInput
  car_image: STRAPI__MEDIAFilterInput
  children: NodeFilterListInput
  color: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  key: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  localizations: STRAPI_BW_IMAGELocalizationsFilterInput
  model: StringQueryOperatorInput
  parent: NodeFilterInput
  price: IntQueryOperatorInput
  publishedAt: DateQueryOperatorInput
  strapi_id: IntQueryOperatorInput
  updatedAt: DateQueryOperatorInput
}

input STRAPI_BW_IMAGEFilterListInput {
  elemMatch: STRAPI_BW_IMAGEFilterInput
}

type STRAPI_BW_IMAGEGroupConnection {
  distinct(field: STRAPI_BW_IMAGEFieldsEnum!): [String!]!
  edges: [STRAPI_BW_IMAGEEdge!]!
  field: String!
  fieldValue: String
  group(field: STRAPI_BW_IMAGEFieldsEnum!, limit: Int, skip: Int): [STRAPI_BW_IMAGEGroupConnection!]!
  max(field: STRAPI_BW_IMAGEFieldsEnum!): Float
  min(field: STRAPI_BW_IMAGEFieldsEnum!): Float
  nodes: [STRAPI_BW_IMAGE!]!
  pageInfo: PageInfo!
  sum(field: STRAPI_BW_IMAGEFieldsEnum!): Float
  totalCount: Int!
}

type STRAPI_BW_IMAGELocalizations {
  data: [STRAPI_BW_IMAGELocalizationsData]
}

type STRAPI_BW_IMAGELocalizationsData {
  attributes: STRAPI_BW_IMAGELocalizationsDataAttributes
  id: Int
}

type STRAPI_BW_IMAGELocalizationsDataAttributes {
  brand: String
  color: String
  createdAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  key: String
  locale: String
  model: String
  price: Int
  publishedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  updatedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

input STRAPI_BW_IMAGELocalizationsDataAttributesFilterInput {
  brand: StringQueryOperatorInput
  color: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  key: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  model: StringQueryOperatorInput
  price: IntQueryOperatorInput
  publishedAt: DateQueryOperatorInput
  updatedAt: DateQueryOperatorInput
}

input STRAPI_BW_IMAGELocalizationsDataFilterInput {
  attributes: STRAPI_BW_IMAGELocalizationsDataAttributesFilterInput
  id: IntQueryOperatorInput
}

input STRAPI_BW_IMAGELocalizationsDataFilterListInput {
  elemMatch: STRAPI_BW_IMAGELocalizationsDataFilterInput
}

input STRAPI_BW_IMAGELocalizationsFilterInput {
  data: STRAPI_BW_IMAGELocalizationsDataFilterListInput
}

input STRAPI_BW_IMAGESortInput {
  fields: [STRAPI_BW_IMAGEFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI_BW_PAGE implements Node {
  bw_assets: [STRAPI_BW_ASSET]
  bw_images: [STRAPI_BW_IMAGE]
  children: [Node!]!
  createdAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!
  internal: Internal!
  locale: String
  localizations: STRAPI_BW_PAGELocalizations
  parent: Node
  publishedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  strapi_id: Int
  tite: String
  updatedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  uri: String
}

type STRAPI_BW_PAGEConnection {
  distinct(field: STRAPI_BW_PAGEFieldsEnum!): [String!]!
  edges: [STRAPI_BW_PAGEEdge!]!
  group(field: STRAPI_BW_PAGEFieldsEnum!, limit: Int, skip: Int): [STRAPI_BW_PAGEGroupConnection!]!
  max(field: STRAPI_BW_PAGEFieldsEnum!): Float
  min(field: STRAPI_BW_PAGEFieldsEnum!): Float
  nodes: [STRAPI_BW_PAGE!]!
  pageInfo: PageInfo!
  sum(field: STRAPI_BW_PAGEFieldsEnum!): Float
  totalCount: Int!
}

type STRAPI_BW_PAGEEdge {
  next: STRAPI_BW_PAGE
  node: STRAPI_BW_PAGE!
  previous: STRAPI_BW_PAGE
}

enum STRAPI_BW_PAGEFieldsEnum {
  bw_assets
  bw_assets___bw_page___bw_assets
  bw_assets___bw_page___bw_assets___children
  bw_assets___bw_page___bw_assets___childrenStrapiBwAssetValueTextnode
  bw_assets___bw_page___bw_assets___createdAt
  bw_assets___bw_page___bw_assets___id
  bw_assets___bw_page___bw_assets___key
  bw_assets___bw_page___bw_assets___locale
  bw_assets___bw_page___bw_assets___publishedAt
  bw_assets___bw_page___bw_assets___strapi_id
  bw_assets___bw_page___bw_assets___updatedAt
  bw_assets___bw_page___bw_images
  bw_assets___bw_page___bw_images___brand
  bw_assets___bw_page___bw_images___children
  bw_assets___bw_page___bw_images___color
  bw_assets___bw_page___bw_images___createdAt
  bw_assets___bw_page___bw_images___id
  bw_assets___bw_page___bw_images___key
  bw_assets___bw_page___bw_images___locale
  bw_assets___bw_page___bw_images___model
  bw_assets___bw_page___bw_images___price
  bw_assets___bw_page___bw_images___publishedAt
  bw_assets___bw_page___bw_images___strapi_id
  bw_assets___bw_page___bw_images___updatedAt
  bw_assets___bw_page___children
  bw_assets___bw_page___children___children
  bw_assets___bw_page___children___id
  bw_assets___bw_page___createdAt
  bw_assets___bw_page___id
  bw_assets___bw_page___internal___content
  bw_assets___bw_page___internal___contentDigest
  bw_assets___bw_page___internal___contentFilePath
  bw_assets___bw_page___internal___description
  bw_assets___bw_page___internal___fieldOwners
  bw_assets___bw_page___internal___ignoreType
  bw_assets___bw_page___internal___mediaType
  bw_assets___bw_page___internal___owner
  bw_assets___bw_page___internal___type
  bw_assets___bw_page___locale
  bw_assets___bw_page___localizations___data
  bw_assets___bw_page___parent___children
  bw_assets___bw_page___parent___id
  bw_assets___bw_page___publishedAt
  bw_assets___bw_page___strapi_id
  bw_assets___bw_page___tite
  bw_assets___bw_page___updatedAt
  bw_assets___bw_page___uri
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___children
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___html
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___htmlAst
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___id
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___rawMarkdownBody
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childStrapiBwAssetValueTextnode___childMarkdownRemark___timeToRead
  bw_assets___childStrapiBwAssetValueTextnode___children
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___children
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___html
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___htmlAst
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___id
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___rawMarkdownBody
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childStrapiBwAssetValueTextnode___childrenMarkdownRemark___timeToRead
  bw_assets___childStrapiBwAssetValueTextnode___children___children
  bw_assets___childStrapiBwAssetValueTextnode___children___id
  bw_assets___childStrapiBwAssetValueTextnode___id
  bw_assets___childStrapiBwAssetValueTextnode___internal___content
  bw_assets___childStrapiBwAssetValueTextnode___internal___contentDigest
  bw_assets___childStrapiBwAssetValueTextnode___internal___contentFilePath
  bw_assets___childStrapiBwAssetValueTextnode___internal___description
  bw_assets___childStrapiBwAssetValueTextnode___internal___fieldOwners
  bw_assets___childStrapiBwAssetValueTextnode___internal___ignoreType
  bw_assets___childStrapiBwAssetValueTextnode___internal___mediaType
  bw_assets___childStrapiBwAssetValueTextnode___internal___owner
  bw_assets___childStrapiBwAssetValueTextnode___internal___type
  bw_assets___childStrapiBwAssetValueTextnode___parent___children
  bw_assets___childStrapiBwAssetValueTextnode___parent___id
  bw_assets___childStrapiBwAssetValueTextnode___value
  bw_assets___children
  bw_assets___childrenStrapiBwAssetValueTextnode
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___children
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___html
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___htmlAst
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___id
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___rawMarkdownBody
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childrenStrapiBwAssetValueTextnode___childMarkdownRemark___timeToRead
  bw_assets___childrenStrapiBwAssetValueTextnode___children
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___children
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___excerptAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___html
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___htmlAst
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___id
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___rawMarkdownBody
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  bw_assets___childrenStrapiBwAssetValueTextnode___childrenMarkdownRemark___timeToRead
  bw_assets___childrenStrapiBwAssetValueTextnode___children___children
  bw_assets___childrenStrapiBwAssetValueTextnode___children___id
  bw_assets___childrenStrapiBwAssetValueTextnode___id
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___content
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___contentDigest
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___contentFilePath
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___description
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___fieldOwners
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___ignoreType
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___mediaType
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___owner
  bw_assets___childrenStrapiBwAssetValueTextnode___internal___type
  bw_assets___childrenStrapiBwAssetValueTextnode___parent___children
  bw_assets___childrenStrapiBwAssetValueTextnode___parent___id
  bw_assets___childrenStrapiBwAssetValueTextnode___value
  bw_assets___children___children
  bw_assets___children___children___children
  bw_assets___children___children___id
  bw_assets___children___id
  bw_assets___children___internal___content
  bw_assets___children___internal___contentDigest
  bw_assets___children___internal___contentFilePath
  bw_assets___children___internal___description
  bw_assets___children___internal___fieldOwners
  bw_assets___children___internal___ignoreType
  bw_assets___children___internal___mediaType
  bw_assets___children___internal___owner
  bw_assets___children___internal___type
  bw_assets___children___parent___children
  bw_assets___children___parent___id
  bw_assets___createdAt
  bw_assets___id
  bw_assets___internal___content
  bw_assets___internal___contentDigest
  bw_assets___internal___contentFilePath
  bw_assets___internal___description
  bw_assets___internal___fieldOwners
  bw_assets___internal___ignoreType
  bw_assets___internal___mediaType
  bw_assets___internal___owner
  bw_assets___internal___type
  bw_assets___key
  bw_assets___locale
  bw_assets___localizations___data
  bw_assets___localizations___data___id
  bw_assets___parent___children
  bw_assets___parent___children___children
  bw_assets___parent___children___id
  bw_assets___parent___id
  bw_assets___parent___internal___content
  bw_assets___parent___internal___contentDigest
  bw_assets___parent___internal___contentFilePath
  bw_assets___parent___internal___description
  bw_assets___parent___internal___fieldOwners
  bw_assets___parent___internal___ignoreType
  bw_assets___parent___internal___mediaType
  bw_assets___parent___internal___owner
  bw_assets___parent___internal___type
  bw_assets___parent___parent___children
  bw_assets___parent___parent___id
  bw_assets___publishedAt
  bw_assets___strapi_id
  bw_assets___updatedAt
  bw_assets___value___data___children
  bw_assets___value___data___childrenMarkdownRemark
  bw_assets___value___data___id
  bw_assets___value___data___value
  bw_images
  bw_images___brand
  bw_images___bw_page___bw_assets
  bw_images___bw_page___bw_assets___children
  bw_images___bw_page___bw_assets___childrenStrapiBwAssetValueTextnode
  bw_images___bw_page___bw_assets___createdAt
  bw_images___bw_page___bw_assets___id
  bw_images___bw_page___bw_assets___key
  bw_images___bw_page___bw_assets___locale
  bw_images___bw_page___bw_assets___publishedAt
  bw_images___bw_page___bw_assets___strapi_id
  bw_images___bw_page___bw_assets___updatedAt
  bw_images___bw_page___bw_images
  bw_images___bw_page___bw_images___brand
  bw_images___bw_page___bw_images___children
  bw_images___bw_page___bw_images___color
  bw_images___bw_page___bw_images___createdAt
  bw_images___bw_page___bw_images___id
  bw_images___bw_page___bw_images___key
  bw_images___bw_page___bw_images___locale
  bw_images___bw_page___bw_images___model
  bw_images___bw_page___bw_images___price
  bw_images___bw_page___bw_images___publishedAt
  bw_images___bw_page___bw_images___strapi_id
  bw_images___bw_page___bw_images___updatedAt
  bw_images___bw_page___children
  bw_images___bw_page___children___children
  bw_images___bw_page___children___id
  bw_images___bw_page___createdAt
  bw_images___bw_page___id
  bw_images___bw_page___internal___content
  bw_images___bw_page___internal___contentDigest
  bw_images___bw_page___internal___contentFilePath
  bw_images___bw_page___internal___description
  bw_images___bw_page___internal___fieldOwners
  bw_images___bw_page___internal___ignoreType
  bw_images___bw_page___internal___mediaType
  bw_images___bw_page___internal___owner
  bw_images___bw_page___internal___type
  bw_images___bw_page___locale
  bw_images___bw_page___localizations___data
  bw_images___bw_page___parent___children
  bw_images___bw_page___parent___id
  bw_images___bw_page___publishedAt
  bw_images___bw_page___strapi_id
  bw_images___bw_page___tite
  bw_images___bw_page___updatedAt
  bw_images___bw_page___uri
  bw_images___car_image___alternativeText
  bw_images___car_image___caption
  bw_images___car_image___children
  bw_images___car_image___children___children
  bw_images___car_image___children___id
  bw_images___car_image___createdAt
  bw_images___car_image___ext
  bw_images___car_image___hash
  bw_images___car_image___height
  bw_images___car_image___id
  bw_images___car_image___internal___content
  bw_images___car_image___internal___contentDigest
  bw_images___car_image___internal___contentFilePath
  bw_images___car_image___internal___description
  bw_images___car_image___internal___fieldOwners
  bw_images___car_image___internal___ignoreType
  bw_images___car_image___internal___mediaType
  bw_images___car_image___internal___owner
  bw_images___car_image___internal___type
  bw_images___car_image___mime
  bw_images___car_image___name
  bw_images___car_image___parent___children
  bw_images___car_image___parent___id
  bw_images___car_image___size
  bw_images___car_image___strapi_id
  bw_images___car_image___updatedAt
  bw_images___car_image___url
  bw_images___car_image___width
  bw_images___children
  bw_images___children___children
  bw_images___children___children___children
  bw_images___children___children___id
  bw_images___children___id
  bw_images___children___internal___content
  bw_images___children___internal___contentDigest
  bw_images___children___internal___contentFilePath
  bw_images___children___internal___description
  bw_images___children___internal___fieldOwners
  bw_images___children___internal___ignoreType
  bw_images___children___internal___mediaType
  bw_images___children___internal___owner
  bw_images___children___internal___type
  bw_images___children___parent___children
  bw_images___children___parent___id
  bw_images___color
  bw_images___createdAt
  bw_images___id
  bw_images___internal___content
  bw_images___internal___contentDigest
  bw_images___internal___contentFilePath
  bw_images___internal___description
  bw_images___internal___fieldOwners
  bw_images___internal___ignoreType
  bw_images___internal___mediaType
  bw_images___internal___owner
  bw_images___internal___type
  bw_images___key
  bw_images___locale
  bw_images___localizations___data
  bw_images___localizations___data___id
  bw_images___model
  bw_images___parent___children
  bw_images___parent___children___children
  bw_images___parent___children___id
  bw_images___parent___id
  bw_images___parent___internal___content
  bw_images___parent___internal___contentDigest
  bw_images___parent___internal___contentFilePath
  bw_images___parent___internal___description
  bw_images___parent___internal___fieldOwners
  bw_images___parent___internal___ignoreType
  bw_images___parent___internal___mediaType
  bw_images___parent___internal___owner
  bw_images___parent___internal___type
  bw_images___parent___parent___children
  bw_images___parent___parent___id
  bw_images___price
  bw_images___publishedAt
  bw_images___strapi_id
  bw_images___updatedAt
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  createdAt
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  locale
  localizations___data
  localizations___data___attributes___createdAt
  localizations___data___attributes___locale
  localizations___data___attributes___publishedAt
  localizations___data___attributes___tite
  localizations___data___attributes___updatedAt
  localizations___data___attributes___uri
  localizations___data___id
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  publishedAt
  strapi_id
  tite
  updatedAt
  uri
}

input STRAPI_BW_PAGEFilterInput {
  bw_assets: STRAPI_BW_ASSETFilterListInput
  bw_images: STRAPI_BW_IMAGEFilterListInput
  children: NodeFilterListInput
  createdAt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  locale: StringQueryOperatorInput
  localizations: STRAPI_BW_PAGELocalizationsFilterInput
  parent: NodeFilterInput
  publishedAt: DateQueryOperatorInput
  strapi_id: IntQueryOperatorInput
  tite: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  uri: StringQueryOperatorInput
}

type STRAPI_BW_PAGEGroupConnection {
  distinct(field: STRAPI_BW_PAGEFieldsEnum!): [String!]!
  edges: [STRAPI_BW_PAGEEdge!]!
  field: String!
  fieldValue: String
  group(field: STRAPI_BW_PAGEFieldsEnum!, limit: Int, skip: Int): [STRAPI_BW_PAGEGroupConnection!]!
  max(field: STRAPI_BW_PAGEFieldsEnum!): Float
  min(field: STRAPI_BW_PAGEFieldsEnum!): Float
  nodes: [STRAPI_BW_PAGE!]!
  pageInfo: PageInfo!
  sum(field: STRAPI_BW_PAGEFieldsEnum!): Float
  totalCount: Int!
}

type STRAPI_BW_PAGELocalizations {
  data: [STRAPI_BW_PAGELocalizationsData]
}

type STRAPI_BW_PAGELocalizationsData {
  attributes: STRAPI_BW_PAGELocalizationsDataAttributes
  id: Int
}

type STRAPI_BW_PAGELocalizationsDataAttributes {
  createdAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  locale: String
  publishedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  tite: String
  updatedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  uri: String
}

input STRAPI_BW_PAGELocalizationsDataAttributesFilterInput {
  createdAt: DateQueryOperatorInput
  locale: StringQueryOperatorInput
  publishedAt: DateQueryOperatorInput
  tite: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  uri: StringQueryOperatorInput
}

input STRAPI_BW_PAGELocalizationsDataFilterInput {
  attributes: STRAPI_BW_PAGELocalizationsDataAttributesFilterInput
  id: IntQueryOperatorInput
}

input STRAPI_BW_PAGELocalizationsDataFilterListInput {
  elemMatch: STRAPI_BW_PAGELocalizationsDataFilterInput
}

input STRAPI_BW_PAGELocalizationsFilterInput {
  data: STRAPI_BW_PAGELocalizationsDataFilterListInput
}

input STRAPI_BW_PAGESortInput {
  fields: [STRAPI_BW_PAGEFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type STRAPI__MEDIA implements Node {
  alternativeText: String
  caption: String
  children: [Node!]!
  createdAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  ext: String
  formats: STRAPI__MEDIAFormats
  hash: String
  height: Int
  id: ID!
  internal: Internal!
  mime: String
  name: String
  parent: Node
  size: Float
  strapi_id: Int
  updatedAt(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  url: String
  width: Int
}

type STRAPI__MEDIAConnection {
  distinct(field: STRAPI__MEDIAFieldsEnum!): [String!]!
  edges: [STRAPI__MEDIAEdge!]!
  group(field: STRAPI__MEDIAFieldsEnum!, limit: Int, skip: Int): [STRAPI__MEDIAGroupConnection!]!
  max(field: STRAPI__MEDIAFieldsEnum!): Float
  min(field: STRAPI__MEDIAFieldsEnum!): Float
  nodes: [STRAPI__MEDIA!]!
  pageInfo: PageInfo!
  sum(field: STRAPI__MEDIAFieldsEnum!): Float
  totalCount: Int!
}

type STRAPI__MEDIAEdge {
  next: STRAPI__MEDIA
  node: STRAPI__MEDIA!
  previous: STRAPI__MEDIA
}

enum STRAPI__MEDIAFieldsEnum {
  alternativeText
  caption
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  createdAt
  ext
  formats___large___ext
  formats___large___hash
  formats___large___height
  formats___large___mime
  formats___large___name
  formats___large___size
  formats___large___url
  formats___large___width
  formats___medium___ext
  formats___medium___hash
  formats___medium___height
  formats___medium___mime
  formats___medium___name
  formats___medium___size
  formats___medium___url
  formats___medium___width
  formats___small___ext
  formats___small___hash
  formats___small___height
  formats___small___mime
  formats___small___name
  formats___small___size
  formats___small___url
  formats___small___width
  formats___thumbnail___ext
  formats___thumbnail___hash
  formats___thumbnail___height
  formats___thumbnail___mime
  formats___thumbnail___name
  formats___thumbnail___size
  formats___thumbnail___url
  formats___thumbnail___width
  hash
  height
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mime
  name
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  size
  strapi_id
  updatedAt
  url
  width
}

input STRAPI__MEDIAFilterInput {
  alternativeText: StringQueryOperatorInput
  caption: StringQueryOperatorInput
  children: NodeFilterListInput
  createdAt: DateQueryOperatorInput
  ext: StringQueryOperatorInput
  formats: STRAPI__MEDIAFormatsFilterInput
  hash: StringQueryOperatorInput
  height: IntQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  parent: NodeFilterInput
  size: FloatQueryOperatorInput
  strapi_id: IntQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  url: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

type STRAPI__MEDIAFormats {
  large: STRAPI__MEDIAFormatsLarge
  medium: STRAPI__MEDIAFormatsMedium
  small: STRAPI__MEDIAFormatsSmall
  thumbnail: STRAPI__MEDIAFormatsThumbnail
}

input STRAPI__MEDIAFormatsFilterInput {
  large: STRAPI__MEDIAFormatsLargeFilterInput
  medium: STRAPI__MEDIAFormatsMediumFilterInput
  small: STRAPI__MEDIAFormatsSmallFilterInput
  thumbnail: STRAPI__MEDIAFormatsThumbnailFilterInput
}

type STRAPI__MEDIAFormatsLarge {
  ext: String
  hash: String
  height: Int
  mime: String
  name: String
  size: Float
  url: String
  width: Int
}

input STRAPI__MEDIAFormatsLargeFilterInput {
  ext: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  height: IntQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  url: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

type STRAPI__MEDIAFormatsMedium {
  ext: String
  hash: String
  height: Int
  mime: String
  name: String
  size: Float
  url: String
  width: Int
}

input STRAPI__MEDIAFormatsMediumFilterInput {
  ext: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  height: IntQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  url: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

type STRAPI__MEDIAFormatsSmall {
  ext: String
  hash: String
  height: Int
  mime: String
  name: String
  size: Float
  url: String
  width: Int
}

input STRAPI__MEDIAFormatsSmallFilterInput {
  ext: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  height: IntQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  url: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

type STRAPI__MEDIAFormatsThumbnail {
  ext: String
  hash: String
  height: Int
  mime: String
  name: String
  size: Float
  url: String
  width: Int
}

input STRAPI__MEDIAFormatsThumbnailFilterInput {
  ext: StringQueryOperatorInput
  hash: StringQueryOperatorInput
  height: IntQueryOperatorInput
  mime: StringQueryOperatorInput
  name: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  url: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

type STRAPI__MEDIAGroupConnection {
  distinct(field: STRAPI__MEDIAFieldsEnum!): [String!]!
  edges: [STRAPI__MEDIAEdge!]!
  field: String!
  fieldValue: String
  group(field: STRAPI__MEDIAFieldsEnum!, limit: Int, skip: Int): [STRAPI__MEDIAGroupConnection!]!
  max(field: STRAPI__MEDIAFieldsEnum!): Float
  min(field: STRAPI__MEDIAFieldsEnum!): Float
  nodes: [STRAPI__MEDIA!]!
  pageInfo: PageInfo!
  sum(field: STRAPI__MEDIAFieldsEnum!): Float
  totalCount: Int!
}

input STRAPI__MEDIASortInput {
  fields: [STRAPI__MEDIAFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type Site implements Node {
  buildTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  children: [Node!]!
  graphqlTypegen: SiteGraphqlTypegen
  host: String
  id: ID!
  internal: Internal!
  jsxRuntime: String
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port: Int
  siteMetadata: SiteSiteMetadata
  trailingSlash: String
}

type SiteBuildMetadata implements Node {
  buildTime(
    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

type SiteBuildMetadataGroupConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  totalCount: Int!
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  nodes: [Site!]!
  pageInfo: PageInfo!
  sum(field: SiteFieldsEnum!): Float
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  graphqlTypegen___generateOnBuild
  graphqlTypegen___typesOutputPath
  host
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  jsxRuntime
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___description
  siteMetadata___siteUrl
  siteMetadata___title
  trailingSlash
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  graphqlTypegen: SiteGraphqlTypegenFilterInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  jsxRuntime: StringQueryOperatorInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: IntQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
  trailingSlash: StringQueryOperatorInput
}

type SiteFunction implements Node {
  absoluteCompiledFilePath: String!
  children: [Node!]!
  functionRoute: String!
  id: ID!
  internal: Internal!
  matchPath: String
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  parent: Node
  pluginName: String!
  relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  edges: [SiteFunctionEdge!]!
  group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  sum(field: SiteFunctionFieldsEnum!): Float
  totalCount: Int!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  absoluteCompiledFilePath
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  functionRoute
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  matchPath
  originalAbsoluteFilePath
  originalRelativeFilePath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginName
  relativeCompiledFilePath
}

input SiteFunctionFilterInput {
  absoluteCompiledFilePath: StringQueryOperatorInput
  children: NodeFilterListInput
  functionRoute: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  matchPath: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  parent: NodeFilterInput
  pluginName: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
}

type SiteFunctionGroupConnection {
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  edges: [SiteFunctionEdge!]!
  field: String!
  fieldValue: String
  group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  sum(field: SiteFunctionFieldsEnum!): Float
  totalCount: Int!
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteGraphqlTypegen {
  generateOnBuild: Boolean
  typesOutputPath: String
}

input SiteGraphqlTypegenFilterInput {
  generateOnBuild: BooleanQueryOperatorInput
  typesOutputPath: StringQueryOperatorInput
}

type SiteGroupConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  nodes: [Site!]!
  pageInfo: PageInfo!
  sum(field: SiteFieldsEnum!): Float
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  id: ID!
  internal: Internal!
  internalComponentName: String!
  matchPath: String
  pageContext: JSON
  parent: Node
  path: String!
  pluginCreator: SitePlugin
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  sum(field: SitePageFieldsEnum!): Float
  totalCount: Int!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  matchPath
  pageContext
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___contentFilePath
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___contentFilePath
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___contentFilePath
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  pageContext: JSONQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
}

type SitePageGroupConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  sum(field: SitePageFieldsEnum!): Float
  totalCount: Int!
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: JSON
  parent: Node
  pluginFilepath: String
  pluginOptions: JSON
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  sum(field: SitePluginFieldsEnum!): Float
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___contentFilePath
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___contentFilePath
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___contentFilePath
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___contentFilePath
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___contentFilePath
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___contentFilePath
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___contentFilePath
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions
  resolve
  ssrAPIs
  version
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: JSONQueryOperatorInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: JSONQueryOperatorInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

type SitePluginGroupConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  sum(field: SitePluginFieldsEnum!): Float
  totalCount: Int!
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteSiteMetadata {
  description: String
  siteUrl: String
  title: String
}

input SiteSiteMetadataFilterInput {
  description: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}

input TransformOptions {
  cropFocus: ImageCropFocus = ATTENTION
  duotone: DuotoneGradient
  fit: ImageFit = COVER
  grayscale: Boolean = false
  rotate: Int = 0
  trim: Float = 0
}

input WebPOptions {
  quality: Int
}
